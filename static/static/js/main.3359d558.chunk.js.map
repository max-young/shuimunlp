{"version":3,"sources":["home.js","signin.js","App.js","serviceWorker.js","index.js"],"names":["Home","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","home_Header","Component","Header","props","_this4","call","onChangeHandler","event","setState","selectedFile","target","files","loaded","onClickHandler","data","FormData","append","state","axios","post","then","res","console","log","positiveProbability","positive_probability","keywords","className","type","name","onChange","class","onClick","map","word","defaults","xsrfHeaderName","xsrfCookieName","qs","require","SignIn","_this","handleChange","defineProperty","id","handleSubmit","preventDefault","stringify","username","password","window","location","replace","catch","error","alert","redirectToReferrer","length","from","pathname","Redirect","to","onSubmit","data-validate","placeholder","autoFocus","data-placeholder","disabled","validateForm","SignUp","_Component2","Link","App","BrowserRouter","Route","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3359d558.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport \"./css/grayscale.css\";\n\nexport class Home extends Component {\n  render() {\n    return (\n      <div>\n\t      {/* <Navigation /> */}\n        <Header />\n\t      {/* <AboutSection /> */}\n\t      {/* <ContactSection /> */}\n\t      {/* <Footer /> */}\n      </div>\n    )\n  }\n}\n  \nclass Navigation extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogoutClick = this.handleLogoutClick.bind(this);\n    this.handleBackendClick = this.handleBackendClick.bind(this);\n    this.state = {\n      current_user: null\n    }\n  }\n\n  componentDidMount() {\n    axios.get('/api/current-user/')\n    .then(res => {\n      this.setState({current_user: res.data.username})\n    })\n  }\n\n  handleLogoutClick() {\n    axios.get('/api/logout/')\n    .then(res => {\n      this.setState({current_user: null})\n    })\n  }\n\n  handleBackendClick() {\n    window.location = '/flow/'\n  }\n\n  render() {\n    const current_user = this.state.current_user\n    let sign;\n    if (current_user) {\n      sign = <button className=\"nav-link js-scroll-trigger\" onClick={this.handleBackendClick}>{current_user} 点击进入后台</button>\n    } else {\n      sign = <a className=\"nav-link js-scroll-trigger\" href=\"/signin/\">登录</a>\n    }\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\" id=\"mainNav-home\">\n        <div className=\"container\">\n          <a className=\"navbar-brand js-scroll-trigger\" href=\"#page-top\">MM Flow</a>\n          <button className=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            Menu\n            <i className=\"fas fa-bars\"></i>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link js-scroll-trigger\" href=\"#about\">关于</a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link js-scroll-trigger\" href=\"#contact\">联系</a>\n              </li>\n              <li className=\"nav-item\">\n                {sign}\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    )\n  }\n}\n  \nclass Header extends Component {\n\n  constructor(props) {\n    super(props);\n      this.state = {\n        selectedFile: null,\n          positiveProbability: \"\",\n        keywords: []\n      }\n  }\n\n  onChangeHandler=event=>{\n    this.setState({\n      selectedFile: event.target.files[0],\n      loaded: 0,\n    })\n  }\n\n  onClickHandler = () => {\n    const data = new FormData() \n    data.append('file', this.state.selectedFile)\n    axios.post(\"/api/text-analysis/\", data, {\n    })\n    .then(res => {\n        console.log(res.data)\n        this.setState({\n          positiveProbability: res.data.positive_probability,\n          keywords: res.data.keywords\n        })\n    })\n  }\n\n  render() {\n    return (\n      <header className=\"masthead\">\n        <div className=\"container d-flex h-100 align-items-center\">\n          <div className=\"mx-auto text-center\">\n            <div>\n              <input type=\"file\" name=\"file\" onChange={this.onChangeHandler}/>\n              <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.onClickHandler}>Upload</button> \n            </div>\n            <h1>    </h1>\n            <div>\n              <h4>积极的概率: <span>{ this.state.positiveProbability }</span></h4>\n              <h4>关键词:</h4>\n              {this.state.keywords.map((word) => {\n                return <p>{word}</p>;\n              })}\n            </div>\n          </div>\n        </div>\n      </header>\n    )\n  }\n}\n  \n  class AboutSection extends Component {\n    render() {\n      return (\n        <section id=\"about\" className=\"about-section text-center\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-lg-8 mx-auto\">\n                <h2 className=\"text-white mb-4\">Django + React + Docker</h2>\n                <p className=\"text-white-50\">\n                  解决企业合同编写审核工作的协作流程问题<br />\n                  工作流程可自定义配置, 在线编辑合同内容, 统一管理\n                </p>\n              </div>\n            </div>\n          </div>\n        </section>\n      )\n    }\n  }\n  \n  class ContactSection extends Component {\n    render() {\n      return (\n        <section id='contact' className=\"contact-section bg-black\">\n          <div className=\"container\">\n  \n            <div className=\"row\">\n  \n              <div className=\"col-md-4 mb-3 mb-md-0\">\n                <div className=\"card py-4 h-100\">\n                  <div className=\"card-body text-center\">\n                    <i className=\"fas fa-map-marked-alt text-primary-custom mb-2\"></i>\n                    <h4 className=\"text-uppercase m-0\">地址</h4>\n                    <hr className=\"my-4\" />\n                    <div className=\"small text-black-50\">北京</div>\n                  </div>\n                </div>\n              </div>\n  \n              <div className=\"col-md-4 mb-3 mb-md-0\">\n                <div className=\"card py-4 h-100\">\n                  <div className=\"card-body text-center\">\n                    <i className=\"fas fa-envelope text-primary-custom mb-2\"></i>\n                    <h4 className=\"text-uppercase m-0\">邮箱</h4>\n                    <hr className=\"my-4\" />\n                    <div className=\"small text-black-50\">\n                      18601036905@163.com\n                    </div>\n                  </div>\n                </div>\n              </div>\n  \n              <div className=\"col-md-4 mb-3 mb-md-0\">\n                <div className=\"card py-4 h-100\">\n                  <div className=\"card-body text-center\">\n                    <i className=\"fas fa-mobile-alt text-primary-custom mb-2\"></i>\n                    <h4 className=\"text-uppercase m-0\">电话</h4>\n                    <hr className=\"my-4\" />\n                    <div className=\"small text-black-50\">+86 18601036905</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n  \n          </div>\n        </section>\n      )\n    }\n  }\n  \n  class Footer extends Component {\n    render() {\n      return (\n        <footer className=\"bg-black small text-center text-white-50\">\n          <div className=\"container\">\n            Copyright &copy; MMFlow 2018\n          </div>\n        </footer>\n      )\n    }\n  }\n\n  export default Home;\n","import React, { Component } from 'react';\nimport \"./vendor/bootstrap/css/bootstrap.min.css\";\nimport \"./fonts/font-awesome-4.7.0/css/font-awesome.min.css\";\nimport \"./fonts/Linearicons-Free-v1.0.0/icon-font.min.css\";\nimport \"./vendor/animate/animate.css\";\nimport \"./vendor/css-hamburgers/hamburgers.min.css\";\nimport \"./vendor/animsition/css/animsition.min.css\";\nimport \"./vendor/select2/select2.min.css\";\nimport \"./vendor/daterangepicker/daterangepicker.css\";\nimport \"./css/signin/App.css\";\nimport \"./css/signin/main.css\";\nimport \"./css/signin/util.css\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport axios from 'axios';\n\n// 跨域\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\naxios.defaults.xsrfCookieName = \"csrftoken\";\n\nvar qs = require('qs');\n\nexport const fakeAuth = {\n  isAuthenticated: false,\n  authenticate(cb) {\n    this.isAuthenticated = true;\n    setTimeout(cb, 100); // fake async\n  },\n  signout(cb) {\n    this.isAuthenticated = false;\n    setTimeout(cb, 100);\n  }\n};\n\nexport class SignIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      redirectToReferrer: false\n    };\n  }\n\n  validateForm() {\n    return this.state.username.length > 0 && this.state.password.length > 0;\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    axios.post('/api/login/', qs.stringify({\n        username: this.state.username,\n        password: this.state.password,\n      }))\n    .then(res => {\n      window.location.replace(\"/flow\")\n      // this.setState({ redirectToReferrer: true });\n    })\n    .catch(error => {\n      alert('账号密码错误')\n    })\n  }\n\n  render() {\n    const { from } = this.props.location.state || { from: { pathname: \"/flow/\" } };\n    const { redirectToReferrer } = this.state;\n\n    if (redirectToReferrer) {\n      return <Redirect to={from} />;\n    }\n\n    return (\n      <div>\n        <div className=\"limiter\">\n          <div className=\"container-login100\">\n            <div className=\"wrap-login100 p-t-30 p-b-50\">\n              <span className=\"login100-form-title p-b-41\">\n                登录\n              </span>\n              <form className=\"login100-form validate-form p-b-33 p-t-5\" onSubmit={this.handleSubmit}>\n\n                <div className=\"wrap-input100 validate-input\" data-validate = \"Enter username\">\n                  <input\n                    className=\"input100\"\n                    type=\"text\"\n                    name=\"username\"\n                    placeholder=\"用户名\"\n                    autoFocus\n                    value={this.state.username}\n                    onChange={this.handleChange}\n                    id=\"username\"\n                    />\n                  <span className=\"focus-input100\" data-placeholder=\"&#xe82a;\"></span>\n                </div>\n\n                <div className=\"wrap-input100 validate-input\" data-validate=\"Enter password\">\n                  <input\n                    className=\"input100\"\n                    type=\"password\"\n                    name=\"pass\"\n                    placeholder=\"密码\"\n                    value={this.state.password}\n                    onChange={this.handleChange}\n                    id=\"password\"\n                    />\n                  <span className=\"focus-input100\" data-placeholder=\"&#xe80f;\"></span>\n                </div>\n\n                <div className=\"container-login100-form-btn m-t-32\">\n                  <button\n                    className=\"login100-form-btn\"\n                    disabled={!this.validateForm()}\n                    type=\"submit\"\n                  >\n                    登录\n                  </button>\n                </div>\n                {/* <div className=\"pull-right\">\n                  <Link to=\"/signup/\"><h6>注册</h6></Link>\n                </div> */}\n              </form>\n            </div>\n          </div>\n        </div>\n        <div id=\"dropDownSelect1\"></div>\n      </div>\n    )\n  }\n}\n\nexport class SignUp extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"limiter\">\n          <div className=\"container-login100\">\n            <div className=\"wrap-login100 p-t-30 p-b-50\">\n              <span className=\"login100-form-title p-b-41\">\n                注册\n              </span>\n              <form className=\"login100-form validate-form p-b-33 p-t-5\">\n\n                <div className=\"wrap-input100 validate-input\" data-validate = \"Enter username\">\n                  <input className=\"input100\" type=\"text\" name=\"username\" placeholder=\"账号\" />\n                  <span className=\"focus-input100\" data-placeholder=\"&#xe82a;\"></span>\n                </div>\n\n                <div className=\"wrap-input100 validate-input\" data-validate=\"Enter password\">\n                  <input className=\"input100\" type=\"password\" name=\"pass\" placeholder=\"密码\" />\n                  <span className=\"focus-input100\" data-placeholder=\"&#xe80f;\"></span>\n                </div>\n\n                <div className=\"wrap-input100 validate-input\" data-validate=\"confirm password\">\n                  <input className=\"input100\" type=\"password\" name=\"pass\" placeholder=\"确认密码\" />\n                  <span className=\"focus-input100\" data-placeholder=\"&#xe80f;\"></span>\n                </div>\n\n                <div className=\"wrap-input100 validate-input\" data-validate=\"Enter company\">\n                  <input className=\"input100\" type=\"text\" name=\"company\" placeholder=\"输入公司名称\" />\n                  <span className=\"focus-input100\" data-placeholder=\"&#xe82a;\"></span>\n                </div>\n\n                <div className=\"container-login100-form-btn m-t-32\">\n                  <button className=\"login100-form-btn\">\n                    提交\n                  </button>\n                </div>\n                <div className=\"pull-right\">\n                  <Link to=\"/signin/\"><h6>登录</h6></Link>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n        <div id=\"dropDownSelect1\"></div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport {Home} from \"./home\";\nimport {SignIn, SignUp } from \"./signin\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/signin/\" component={SignIn} />\n          <Route path=\"/signup/\" component={SignUp} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './vendor/bootstrap/css/bootstrap.css';\nimport './vendor/fontawesome-free/css/all.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}